[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Private Build Java 1.8.0_275)
[debug]       Load.loadUnit: plugins took 202.591822ms
[debug]       Load.loadUnit: defsScala took 0.988211ms
[debug] [Loading] Scanning directory /home/olzhas/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/olzhas/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 371.84184 ms
[debug]           Load.resolveProject(global-plugins) took 96.62407ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/olzhas/.sbt/1.0/plugins, plugins: List(<none>))) took 545.546461ms
[debug] [Loading] Done in /home/olzhas/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 606.228677ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.582722ms
[debug]     Load.loadUnit(file:/home/olzhas/.sbt/1.0/plugins/, ...) took 832.67972ms
[debug]   Load.apply: load took 1267.465141ms
[debug]   Load.apply: resolveProjects took 21.913949ms
[debug]   Load.apply: finalTransforms took 163.715362ms
[debug]   Load.apply: config.delegates took 20.656548ms
[debug]   Load.apply: Def.make(settings)... took 1147.85818ms
[debug]   Load.apply: structureIndex took 217.237087ms
[debug]   Load.apply: mkStreams took 3.302039ms
[info] loading global plugins from /home/olzhas/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 6278.002993ms
[debug]           Load.loadUnit: plugins took 28.108217ms
[debug]           Load.loadUnit: defsScala took 0.014028ms
[debug] [Loading] Scanning directory /home/olzhas/IdeaProjects/Backend/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 5.048694 ms
[debug]               Load.resolveProject(backend-build) took 2.495929ms
[debug]             Load.loadTransitive: finalizeProject(Project(id backend-build, base: /home/olzhas/IdeaProjects/Backend/project, plugins: List(<none>))) took 8.911868ms
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend/project, returning: (backend-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 12.64035ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.039166ms
[debug]         Load.loadUnit(file:/home/olzhas/IdeaProjects/Backend/project/, ...) took 42.804908ms
[debug]       Load.apply: load took 44.944275ms
[debug]       Load.apply: resolveProjects took 0.245399ms
[debug]       Load.apply: finalTransforms took 16.955095ms
[debug]       Load.apply: config.delegates took 0.723451ms
[debug]       Load.apply: Def.make(settings)... took 182.983685ms
[debug]       Load.apply: structureIndex took 69.14065ms
[debug]       Load.apply: mkStreams took 0.005158ms
[info] loading project definition from /home/olzhas/IdeaProjects/Backend/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 729.334224ms
[debug]     Load.loadUnit: defsScala took 0.005435ms
[debug] [Loading] Scanning directory /home/olzhas/IdeaProjects/Backend
[debug]       Load.loadUnit: mkEval took 11.171871ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.061697 ms
[info] loading settings for project backend from build.sbt ...
[debug]         Load.resolveProject(backend) took 4.710574ms
[debug]       Load.loadTransitive: finalizeProject(Project(id backend, base: /home/olzhas/IdeaProjects/Backend, plugins: List(<none>))) took 10.160074ms
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend, returning: (backend)
[debug]     Load.loadUnit: loadedProjectsRaw took 451.672324ms
[debug]     Load.loadUnit: cleanEvalClasses took 11.52832ms
[debug]   Load.loadUnit(file:/home/olzhas/IdeaProjects/Backend/, ...) took 1193.862236ms
[debug] Load.apply: load took 1196.209393ms
[debug] Load.apply: resolveProjects took 0.229367ms
[debug] Load.apply: finalTransforms took 14.058019ms
[debug] Load.apply: config.delegates took 0.529545ms
[debug] Load.apply: Def.make(settings)... took 152.190957ms
[debug] Load.apply: structureIndex took 63.469388ms
[debug] Load.apply: mkStreams took 0.005404ms
[info] set current project to Backend (in build file:/home/olzhas/IdeaProjects/Backend/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(~run, None, None)
[info] sbt server started at local:///home/olzhas/.sbt/1.0/server/4ad2a33bb3d4bb9af9ee/sock
[info] started sbt server
[debug] > Exec(__runWatch console0, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(__preWatch console0, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to /home/olzhas/IdeaProjects/Backend/target/scala-2.13/classes ...
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repo/UserAccount.scala:30:11: local var newBookList in method addToCart is never updated: consider using immutable val
[warn]       var newBookList = user.books :+ getBookById(bookId)
[warn]           ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repo/UserAccount.scala:31:11: local var changedUser in method addToCart is never updated: consider using immutable val
[warn]       var changedUser = user.copy(books=newBookList)
[warn]           ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repo/UserAccount.scala:35:12: local var newBookList in method deleteFromCart is never updated: consider using immutable val
[warn]        var newBookList = user.books.filter(book => (book.id != bookId))
[warn]            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repo/UserAccount.scala:36:12: local var changedUser in method deleteFromCart is never updated: consider using immutable val
[warn]        var changedUser = user.copy(books=newBookList)
[warn]            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repo/UserAccount.scala:280:5: match may not be exhaustive.
[warn] It would fail on the following input: (x: node.Node.Command forSome x not in (repo.UserAccount.AddBook, repo.UserAccount.AddCategory, repo.UserAccount.AddCoffee, repo.UserAccount.AddToCart, repo.UserAccount.AddUser, repo.UserAccount.AdjustBook, repo.UserAccount.AdjustUser, repo.UserAccount.Checkout, repo.UserAccount.CheckoutBook, repo.UserAccount.DeleteFromCart, repo.UserAccount.GetBook, repo.UserAccount.GetBooks, repo.UserAccount.GetCategories, repo.UserAccount.GetCategory, repo.UserAccount.GetCoffee, repo.UserAccount.GetCoffees, repo.UserAccount.GetToken, repo.UserAccount.GetUser, repo.UserAccount.GetUsers, repo.UserAccount.RateCoffee, repo.UserAccount.RemoveBook, repo.UserAccount.RemoveCategory, repo.UserAccount.RemoveCoffee, repo.UserAccount.RemoveUser, repo.UserAccount.SearchBookByName, repo.UserAccount.UpdateBook, repo.UserAccount.UpdateCategory, repo.UserAccount.UpdateCoffee))
[warn]     command match {
[warn]     ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repo/UserAccount.scala:573:5: match may not be exhaustive.
[warn] It would fail on the following input: (x: node.Node.Command forSome x not in (repo.UserAccount.AddBook, repo.UserAccount.AddToCart, repo.UserAccount.AddUser, repo.UserAccount.AdjustBook, repo.UserAccount.AdjustUser, repo.UserAccount.Checkout, repo.UserAccount.CheckoutBook, repo.UserAccount.GetBook, repo.UserAccount.GetBooks, repo.UserAccount.GetUser, repo.UserAccount.RemoveBook, repo.UserAccount.RemoveUser))
[warn]     command match {
[warn]     ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repo/UserAccount.scala:633:54: unreachable code
[warn]       case BookRemoved(_, itemId) => state.removeBook(itemId)
[warn]                                                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repo/UserAccount.scala:616:5: match may not be exhaustive.
[warn] It would fail on the following input: CoffeeRemoved(_, _)
[warn]     event match {
[warn]     ^
[warn] 8 warnings found
[info] done compiling
