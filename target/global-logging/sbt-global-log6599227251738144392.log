[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Private Build Java 1.8.0_275)
[debug]       Load.loadUnit: plugins took 142.734769ms
[debug]       Load.loadUnit: defsScala took 0.600345ms
[debug] [Loading] Scanning directory /home/olzhas/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/olzhas/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 97.106457 ms
[debug]           Load.resolveProject(global-plugins) took 105.522638ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/olzhas/.sbt/1.0/plugins, plugins: List(<none>))) took 600.708718ms
[debug] [Loading] Done in /home/olzhas/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 661.657439ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.66595ms
[debug]     Load.loadUnit(file:/home/olzhas/.sbt/1.0/plugins/, ...) took 820.681596ms
[debug]   Load.apply: load took 1163.711336ms
[debug]   Load.apply: resolveProjects took 15.56448ms
[debug]   Load.apply: finalTransforms took 150.363793ms
[debug]   Load.apply: config.delegates took 17.322543ms
[debug]   Load.apply: Def.make(settings)... took 1166.725185ms
[debug]   Load.apply: structureIndex took 176.674603ms
[debug]   Load.apply: mkStreams took 2.383373ms
[info] loading global plugins from /home/olzhas/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 5396.709208ms
[debug]           Load.loadUnit: plugins took 42.502765ms
[debug]           Load.loadUnit: defsScala took 0.00779ms
[debug] [Loading] Scanning directory /home/olzhas/IdeaProjects/Backend/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.622083 ms
[debug]               Load.resolveProject(backend-build) took 2.031371ms
[debug]             Load.loadTransitive: finalizeProject(Project(id backend-build, base: /home/olzhas/IdeaProjects/Backend/project, plugins: List(<none>))) took 5.563873ms
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend/project, returning: (backend-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 9.158839ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.014331ms
[debug]         Load.loadUnit(file:/home/olzhas/IdeaProjects/Backend/project/, ...) took 52.913356ms
[debug]       Load.apply: load took 54.674319ms
[debug]       Load.apply: resolveProjects took 0.196ms
[debug]       Load.apply: finalTransforms took 12.764563ms
[debug]       Load.apply: config.delegates took 3.24772ms
[debug]       Load.apply: Def.make(settings)... took 154.691893ms
[debug]       Load.apply: structureIndex took 53.720428ms
[debug]       Load.apply: mkStreams took 0.012182ms
[info] loading project definition from /home/olzhas/IdeaProjects/Backend/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 628.575044ms
[debug]     Load.loadUnit: defsScala took 0.004442ms
[debug] [Loading] Scanning directory /home/olzhas/IdeaProjects/Backend
[debug]       Load.loadUnit: mkEval took 9.032773ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 3.324736 ms
[info] loading settings for project backend from build.sbt ...
[debug]         Load.resolveProject(backend) took 5.685454ms
[debug]       Load.loadTransitive: finalizeProject(Project(id backend, base: /home/olzhas/IdeaProjects/Backend, plugins: List(<none>))) took 10.159134ms
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend, returning: (backend)
[debug]     Load.loadUnit: loadedProjectsRaw took 407.221546ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.057802ms
[debug]   Load.loadUnit(file:/home/olzhas/IdeaProjects/Backend/, ...) took 1051.123659ms
[debug] Load.apply: load took 1053.448681ms
[debug] Load.apply: resolveProjects took 0.266514ms
[debug] Load.apply: finalTransforms took 14.867908ms
[debug] Load.apply: config.delegates took 1.124061ms
[debug] Load.apply: Def.make(settings)... took 175.510638ms
[debug] Load.apply: structureIndex took 61.164692ms
[debug] Load.apply: mkStreams took 0.003437ms
[info] set current project to Backend (in build file:/home/olzhas/IdeaProjects/Backend/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(~run, None, None)
[info] sbt server started at local:///home/olzhas/.sbt/1.0/server/4ad2a33bb3d4bb9af9ee/sock
[info] started sbt server
[debug] > Exec(__runWatch console0, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(__preWatch console0, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 2 Scala sources to /home/olzhas/IdeaProjects/Backend/target/scala-2.13/classes ...
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:3:18: Unused import
[warn] import java.util.UUID
[warn]                  ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:11:20: Unused import
[warn] import repository.{ApiError, BookNotFound, UsersDirectives}
[warn]                    ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:11:30: Unused import
[warn] import repository.{ApiError, BookNotFound, UsersDirectives}
[warn]                              ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:22:81: parameter value ex in class NodeRouter is never used
[warn] class NodeRouter( node:ActorRef[Node.Command])(implicit system: ActorSystem[_], ex:ExecutionContext)
[warn]                                                                                 ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:29:11: local var newBookList in method addToCart is never updated: consider using immutable val
[warn]       var newBookList = user.books :+ getBookById(bookId)
[warn]           ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:30:11: local var changedUser in method addToCart is never updated: consider using immutable val
[warn]       var changedUser = user.copy(books=newBookList)
[warn]           ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:34:12: local var newBookList in method deleteFromCart is never updated: consider using immutable val
[warn]        var newBookList = user.books.filter(book => (book.id != bookId))
[warn]            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:35:12: local var changedUser in method deleteFromCart is never updated: consider using immutable val
[warn]        var changedUser = user.copy(books=newBookList)
[warn]            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:36:22: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]             complete(response)
[warn]                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:42:20: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]           entity(as[PostText]) { token =>
[warn]                    ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:48:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               complete(token)
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:55:20: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]           entity(as[NewUser]) { newUser =>
[warn]                    ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:64:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               complete(response)
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:72:22: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]             entity(as[AddBookToUser]) { updateUser =>
[warn]                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:76:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:81:22: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]             entity(as[AddBookToUser]) { updateUser =>
[warn]                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:85:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:99:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:106:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:110:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 entity(as[AddBookToUser]) { updateUser =>
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:114:30: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                     complete(response)
[warn]                              ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:124:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               complete(response)
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:128:22: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]             entity(as[NewUser]) { createUser =>
[warn]                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:137:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:152:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:159:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:163:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 entity(as[UpdateCategory]) { updateCat =>
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:167:30: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                     complete(response)
[warn]                              ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:178:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:182:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               entity(as[CreateCategory]) { createCat =>
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:191:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:207:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:218:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:225:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:229:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 entity(as[UpdateBook]) { updateBook=>
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:233:30: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                     complete(response)
[warn]                              ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:244:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:248:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               entity(as[CreateBook]) { createBook =>
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:257:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:279:5: match may not be exhaustive.
[warn] It would fail on the following input: (x: node.Node.Command forSome x not in (repository.UsersAccount.AddBook, repository.UsersAccount.AddCategory, repository.UsersAccount.AddCoffee, repository.UsersAccount.AddToCart, repository.UsersAccount.AddUser, repository.UsersAccount.AdjustBook, repository.UsersAccount.AdjustUser, repository.UsersAccount.Checkout, repository.UsersAccount.CheckoutBook, repository.UsersAccount.DeleteFromCart, repository.UsersAccount.GetBook, repository.UsersAccount.GetBooks, repository.UsersAccount.GetCategories, repository.UsersAccount.GetCategory, repository.UsersAccount.GetCoffee, repository.UsersAccount.GetCoffees, repository.UsersAccount.GetToken, repository.UsersAccount.GetUser, repository.UsersAccount.GetUsers, repository.UsersAccount.RateCoffee, repository.UsersAccount.RemoveBook, repository.UsersAccount.RemoveCategory, repository.UsersAccount.RemoveCoffee, repository.UsersAccount.RemoveUser, repository.UsersAccount.SearchBookByName, repository.UsersAccount.UpdateBook, repository.UsersAccount.UpdateCategory, repository.UsersAccount.UpdateCoffee))
[warn]     command match {
[warn]     ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:572:5: match may not be exhaustive.
[warn] It would fail on the following input: (x: node.Node.Command forSome x not in (repository.UsersAccount.AddBook, repository.UsersAccount.AddToCart, repository.UsersAccount.AddUser, repository.UsersAccount.AdjustBook, repository.UsersAccount.AdjustUser, repository.UsersAccount.Checkout, repository.UsersAccount.CheckoutBook, repository.UsersAccount.GetBook, repository.UsersAccount.GetBooks, repository.UsersAccount.GetUser, repository.UsersAccount.RemoveBook, repository.UsersAccount.RemoveUser))
[warn]     command match {
[warn]     ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:632:54: unreachable code
[warn]       case BookRemoved(_, itemId) => state.removeBook(itemId)
[warn]                                                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:615:5: match may not be exhaustive.
[warn] It would fail on the following input: CoffeeRemoved(_, _)
[warn]     event match {
[warn]     ^
[warn] 43 warnings found
[info] done compiling
