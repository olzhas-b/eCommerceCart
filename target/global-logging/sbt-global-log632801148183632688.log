[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.5 (Private Build Java 1.8.0_275)
[debug]       Load.loadUnit: plugins took 168.386317ms
[debug]       Load.loadUnit: defsScala took 1.698391ms
[debug] [Loading] Scanning directory /home/olzhas/.sbt/1.0/plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/olzhas/.sbt/1.0/plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 53.497367 ms
[debug]           Load.resolveProject(global-plugins) took 69.234558ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: /home/olzhas/.sbt/1.0/plugins, plugins: List(<none>))) took 420.322938ms
[debug] [Loading] Done in /home/olzhas/.sbt/1.0/plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 473.267421ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.356599ms
[debug]     Load.loadUnit(file:/home/olzhas/.sbt/1.0/plugins/, ...) took 656.386957ms
[debug]   Load.apply: load took 927.380473ms
[debug]   Load.apply: resolveProjects took 12.529883ms
[debug]   Load.apply: finalTransforms took 156.293954ms
[debug]   Load.apply: config.delegates took 14.317669ms
[debug]   Load.apply: Def.make(settings)... took 705.403882ms
[debug]   Load.apply: structureIndex took 123.96971ms
[debug]   Load.apply: mkStreams took 2.021445ms
[info] loading global plugins from /home/olzhas/.sbt/1.0/plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 4411.955913ms
[debug]           Load.loadUnit: plugins took 43.737804ms
[debug]           Load.loadUnit: defsScala took 0.005809ms
[debug] [Loading] Scanning directory /home/olzhas/IdeaProjects/Backend/project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend/project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 4.261801 ms
[debug]               Load.resolveProject(backend-build) took 3.324699ms
[debug]             Load.loadTransitive: finalizeProject(Project(id backend-build, base: /home/olzhas/IdeaProjects/Backend/project, plugins: List(<none>))) took 8.962612ms
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend/project, returning: (backend-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 11.914971ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.018007ms
[debug]         Load.loadUnit(file:/home/olzhas/IdeaProjects/Backend/project/, ...) took 56.766513ms
[debug]       Load.apply: load took 58.5832ms
[debug]       Load.apply: resolveProjects took 0.129464ms
[debug]       Load.apply: finalTransforms took 13.861336ms
[debug]       Load.apply: config.delegates took 0.456601ms
[debug]       Load.apply: Def.make(settings)... took 90.858064ms
[debug]       Load.apply: structureIndex took 38.866466ms
[debug]       Load.apply: mkStreams took 0.002697ms
[info] loading project definition from /home/olzhas/IdeaProjects/Backend/project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 492.013698ms
[debug]     Load.loadUnit: defsScala took 0.009436ms
[debug] [Loading] Scanning directory /home/olzhas/IdeaProjects/Backend
[debug]       Load.loadUnit: mkEval took 10.066541ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.7285 ms
[info] loading settings for project backend from build.sbt ...
[debug]         Load.resolveProject(backend) took 2.594671ms
[debug]       Load.loadTransitive: finalizeProject(Project(id backend, base: /home/olzhas/IdeaProjects/Backend, plugins: List(<none>))) took 4.967343ms
[debug] [Loading] Done in /home/olzhas/IdeaProjects/Backend, returning: (backend)
[debug]     Load.loadUnit: loadedProjectsRaw took 337.943023ms
[debug]     Load.loadUnit: cleanEvalClasses took 6.048254ms
[debug]   Load.loadUnit(file:/home/olzhas/IdeaProjects/Backend/, ...) took 837.286315ms
[debug] Load.apply: load took 838.836643ms
[debug] Load.apply: resolveProjects took 0.261862ms
[debug] Load.apply: finalTransforms took 7.501349ms
[debug] Load.apply: config.delegates took 0.419597ms
[debug] Load.apply: Def.make(settings)... took 101.960676ms
[debug] Load.apply: structureIndex took 36.621215ms
[debug] Load.apply: mkStreams took 0.006128ms
[info] set current project to Backend (in build file:/home/olzhas/IdeaProjects/Backend/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(~run, None, None)
[info] sbt server started at local:///home/olzhas/.sbt/1.0/server/4ad2a33bb3d4bb9af9ee/sock
[info] started sbt server
[debug] > Exec(__runWatch console0, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(__preWatch console0, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 10 Scala sources to /home/olzhas/IdeaProjects/Backend/target/scala-2.13/classes ...
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/Main.scala:7:14: Unused import
[warn] import model._
[warn]              ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/Main.scala:16:18: local val log in method main is never used
[warn]     implicit val log: Logger = LoggerFactory.getLogger(getClass)
[warn]                  ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:3:18: Unused import
[warn] import java.util.UUID
[warn]                  ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:11:20: Unused import
[warn] import repository.{ApiError, BookNotFound, UsersDirectives}
[warn]                    ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:11:30: Unused import
[warn] import repository.{ApiError, BookNotFound, UsersDirectives}
[warn]                              ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:22:81: parameter value ex in class NodeRouter is never used
[warn] class NodeRouter( node:ActorRef[Node.Command])(implicit system: ActorSystem[_], ex:ExecutionContext)
[warn]                                                                                 ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/node/Node.scala:105:20: local method system in value $anonfun is never used
[warn]       implicit def system: ActorSystem[Nothing] = context.system
[warn]                    ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/node/Node.scala:107:20: local method scheduler in value $anonfun is never used
[warn]       implicit def scheduler: Scheduler = context.system.scheduler
[warn]                    ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/node/Node.scala:109:25: local val timeout in value $anonfun is never used
[warn]       implicit lazy val timeout: Timeout = Timeout(5.seconds)
[warn]                         ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:29:11: local var newBookList in method addToCart is never updated: consider using immutable val
[warn]       var newBookList = user.books :+ getBookById(bookId)
[warn]           ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:30:11: local var changedUser in method addToCart is never updated: consider using immutable val
[warn]       var changedUser = user.copy(books=newBookList)
[warn]           ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:34:12: local var newBookList in method deleteFromCart is never updated: consider using immutable val
[warn]        var newBookList = user.books.filter(book => (book.id != bookId))
[warn]            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:35:12: local var changedUser in method deleteFromCart is never updated: consider using immutable val
[warn]        var changedUser = user.copy(books=newBookList)
[warn]            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersRepository.scala:5:21: Unused import
[warn] import UsersAccount._
[warn]                     ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersRepository.scala:32:15: private var cnt in class InMemoryRepository is never used
[warn]   private var cnt: Int = 0
[warn]               ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersRepository.scala:142:15: private method apply in object ApiError is never used
[warn]   private def apply(statusCode: StatusCode, message: String): ApiError = new ApiError(statusCode, message)
[warn]               ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersRepository.scala:28:36: parameter value ex in class InMemoryRepository is never used
[warn]                         (implicit  ex:ExecutionContext) extends UsersRepository {
[warn]                                    ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:34:22: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]             complete(response)
[warn]                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:40:20: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]           entity(as[PostText]) { token =>
[warn]                    ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:46:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               complete(token)
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:53:20: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]           entity(as[NewUser]) { newUser =>
[warn]                    ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:62:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               complete(response)
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:70:22: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]             entity(as[AddBookToUser]) { updateUser =>
[warn]                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:74:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:79:22: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]             entity(as[AddBookToUser]) { updateUser =>
[warn]                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:83:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:97:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:104:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:108:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 entity(as[AddBookToUser]) { updateUser =>
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:112:30: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                     complete(response)
[warn]                              ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:122:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               complete(response)
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:126:22: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]             entity(as[NewUser]) { createUser =>
[warn]                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:135:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:150:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:157:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:161:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 entity(as[UpdateCategory]) { updateCat =>
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:165:30: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                     complete(response)
[warn]                              ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:176:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:180:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               entity(as[CreateCategory]) { createCat =>
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:189:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:205:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:216:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:223:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:227:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 entity(as[UpdateBook]) { updateBook=>
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:231:30: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                     complete(response)
[warn]                              ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:242:26: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                 complete(response)
[warn]                          ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:246:24: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]               entity(as[CreateBook]) { createBook =>
[warn]                        ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/api/Router.scala:255:28: Block result was adapted via implicit conversion (method apply) taking a by-name parameter
[warn]                   complete(response)
[warn]                            ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/node/Node.scala:114:9: match may not be exhaustive.
[warn] It would fail on the following input: (x: node.Node.Command forSome x not in (node.Node.AddProductToBasket, node.Node.Check, node.Node.Create, node.Node.CreateCategory, node.Node.CreateCoffee, node.Node.CreateProduct, node.Node.DeleteAccount, node.Node.DeleteCategory, node.Node.DeleteCoffee, node.Node.DeleteProduct, node.Node.DeleteProductFromAccount, node.Node.FindProduct, node.Node.GetAccount, node.Node.GetAccounts, node.Node.GetCategories, node.Node.GetCategory, node.Node.GetCoffee, node.Node.GetCoffees, node.Node.GetProduct, node.Node.GetProducts, node.Node.GetToken, node.Node.RateCoffee, node.Node.UpdateCategory, node.Node.UpdateCoffee, node.Node.UpdateProduct))
[warn]         message match {
[warn]         ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:279:5: match may not be exhaustive.
[warn] It would fail on the following input: (x: node.Node.Command forSome x not in (repository.UsersAccount.AddBook, repository.UsersAccount.AddCategory, repository.UsersAccount.AddCoffee, repository.UsersAccount.AddToCart, repository.UsersAccount.AddUser, repository.UsersAccount.AdjustBook, repository.UsersAccount.AdjustUser, repository.UsersAccount.Checkout, repository.UsersAccount.CheckoutBook, repository.UsersAccount.DeleteFromCart, repository.UsersAccount.GetBook, repository.UsersAccount.GetBooks, repository.UsersAccount.GetCategories, repository.UsersAccount.GetCategory, repository.UsersAccount.GetCoffee, repository.UsersAccount.GetCoffees, repository.UsersAccount.GetToken, repository.UsersAccount.GetUser, repository.UsersAccount.GetUsers, repository.UsersAccount.RateCoffee, repository.UsersAccount.RemoveBook, repository.UsersAccount.RemoveCategory, repository.UsersAccount.RemoveCoffee, repository.UsersAccount.RemoveUser, repository.UsersAccount.SearchBookByName, repository.UsersAccount.UpdateBook, repository.UsersAccount.UpdateCategory, repository.UsersAccount.UpdateCoffee))
[warn]     command match {
[warn]     ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:572:5: match may not be exhaustive.
[warn] It would fail on the following input: (x: node.Node.Command forSome x not in (repository.UsersAccount.AddBook, repository.UsersAccount.AddToCart, repository.UsersAccount.AddUser, repository.UsersAccount.AdjustBook, repository.UsersAccount.AdjustUser, repository.UsersAccount.Checkout, repository.UsersAccount.CheckoutBook, repository.UsersAccount.GetBook, repository.UsersAccount.GetBooks, repository.UsersAccount.GetUser, repository.UsersAccount.RemoveBook, repository.UsersAccount.RemoveUser))
[warn]     command match {
[warn]     ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:632:54: unreachable code
[warn]       case BookRemoved(_, itemId) => state.removeBook(itemId)
[warn]                                                      ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersAccount.scala:615:5: match may not be exhaustive.
[warn] It would fail on the following input: CoffeeRemoved(_, _)
[warn]     event match {
[warn]     ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersRepository.scala:50:11: match may not be exhaustive.
[warn] It would fail on the following input: None
[warn]           book_tmp match {
[warn]           ^
[warn] /home/olzhas/IdeaProjects/Backend/src/main/scala/repository/UsersRepository.scala:129:96: match may not be exhaustive.
[warn] It would fail on the following input: Failure(_)
[warn]   def handle[T](f: Future[T])(e: Throwable => ApiError): Directive1[T] = onComplete(f) flatMap {
[warn]                                                                                                ^
[warn] 55 warnings found
[info] done compiling
